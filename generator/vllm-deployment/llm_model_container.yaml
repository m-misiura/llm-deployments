apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  ports:
    - name: minio-client-port
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vllm-models-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  # storageClassName: gp3-csi
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-container-deployment # <--- change this
labels:
    app: minio # <--- change this to match label on the pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio  # <--- change this to match label on the pod
  template: # => from here down copy and paste the pods metadata: and spec: sections
    metadata:
      labels:
        app: minio
        maistra.io/expose-route: 'true'
      name: minio
    spec:
      volumes:
      - name: model-volume
        persistentVolumeClaim:
          claimName: vllm-models-claim
      initContainers:
        - name: download-model
          image: quay.io/rgeada/llm_downloader:latest
          securityContext:
            fsGroup: 1001
          command:
            - bash
            - -c
            - |
              # model="ibm-granite/granite-7b-base"
              # model="microsoft/Phi-3-mini-4k-instruct"
              model="openai-community/gpt2"
              echo "starting download"
              /tmp/venv/bin/huggingface-cli download $model --local-dir /mnt/models/llms/$(basename $model)
              echo "Done!"
          resources:
            limits:
              memory: "5Gi"
              cpu: "2"
          volumeMounts:
            - mountPath: "/mnt/models/"
              name: model-volume
      containers:
        - args:
            - server
            - /models
          env:
            - name: MINIO_ACCESS_KEY
              value:  THEACCESSKEY
            - name: MINIO_SECRET_KEY
              value: THESECRETKEY
          image: quay.io/trustyai/modelmesh-minio-examples:latest
          name: minio
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: "/models/"
              name: model-volume
---
#apiVersion: v1
#kind: Pod
#metadata:
#  labels:
#    app: minio
#    maistra.io/expose-route: 'true'
#  annotations:
#    sidecar.istio.io/inject: 'true'
#  name: minio
#spec:
#  volumes:
#  - name: model-volume
#    persistentVolumeClaim:
#      claimName: vllm-models-claim
#  restartPolicy: OnFailure # run once then exit
#  initContainers:
#    - name: download-model
#      image: quay.io/rgeada/llm_downloader:latest
#      securityContext:
#        fsGroup: 1001
#        allowPrivilegeEscalation: true
#        runAsUser: 0
#      command:
#        - bash
#        - -c
#        - |
#          # model="ibm-granite/granite-7b-base"
#          model="microsoft/Phi-3-mini-4k-instruct"
#          echo "starting download"
#          /tmp/venv/bin/huggingface-cli download $model --local-dir /mnt/models/llms/$(basename $model)
#          echo "Done!"
#      resources:
#        limits:
#          memory: "2Gi"
#          cpu: "2"
#      volumeMounts:
#        - mountPath: "/mnt/models/"
#          name: model-volume
#  containers:
#    - args:
#        - server
#        - /models
#      env:
#        - name: MINIO_ACCESS_KEY
#          value:  THEACCESSKEY
#        - name: MINIO_SECRET_KEY
#          value: THESECRETKEY
#      image: quay.io/trustyai/modelmesh-minio-examples:latest
#      name: minio
#      securityContext:
#        allowPrivilegeEscalation: false
#        capabilities:
#          drop:
#            - ALL
#        seccompProfile:
#          type: RuntimeDefault
#      volumeMounts:
#        - mountPath: "/models/"
#          name: model-volume
#---
apiVersion: v1
kind: Secret
metadata:
  name: aws-connection-minio-data-connection
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: Minio Data Connection
data:
  AWS_ACCESS_KEY_ID: VEhFQUNDRVNTS0VZ
  AWS_DEFAULT_REGION: dXMtc291dGg=
  AWS_S3_BUCKET: bGxtcw==
  AWS_S3_ENDPOINT: aHR0cDovL21pbmlvOjkwMDA=
  AWS_SECRET_ACCESS_KEY: VEhFU0VDUkVUS0VZ
type: Opaque
